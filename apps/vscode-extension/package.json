{
  "name": "jabbarroot-vscode-extension",
  "displayName": "JabbarRootAi",
  "description": "jabbarroot, the flow protector",
  "version": "0.2.0",
  "publisher": "JabbarRootAi",
  "repository": {
    "type": "git",
    "url": "https://github.com/MrAdnanox/JabbarRootAi.git"
  },
  "bugs": {
    "url": "https://github.com/MrAdnanox/JabbarRootAi/issues"
  },
  "engines": {
    "vscode": "^1.70.0"
  },
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "jabbarroot",
          "title": "JabbarRootAi",
          "icon": "resources/JabbarRoot-icon.svg"
        }
      ]
    },
    "views": {
      "jabbarroot": [
        {
          "id": "jabbarroot.contextView",
          "name": "Contextes Programmables",
          "icon": "resources/JabbarRoot-icon.svg",
          "contextualTitle": "jabbarroot"
        }
      ]
    },
    "commands": [
      {
        "command": "jabbarroot.doc.generateReadme",
        "title": "JabbarDoc: Générer le README du projet",
        "category": "jabbarroot",
        "icon": "$(notebook)"
      },
      {
        "command": "jabbarroot.refreshProjectView",
        "title": "jabbarroot: Refresh Projects View",
        "category": "jabbarroot",
        "icon": "$(refresh)"
      },
      {
        "command": "jabbarroot.createProject",
        "title": "jabbarroot: Create New Project",
        "category": "jabbarroot",
        "icon": "$(add)"
      },
      {
        "command": "jabbarroot.createBrickInProject",
        "title": "jabbarroot: Create New Brick",
        "category": "jabbarroot",
        "icon": "$(add)"
      },
      {
        "command": "jabbarroot.removeFileFromBrick",
        "title": "jabbarroot: Remove Files from Brick...",
        "category": "jabbarroot",
        "icon": "$(diff-removed)"
      },
      {
        "command": "jabbarroot.addPathToBrick",
        "title": "jabbarroot: Add Path to Brick",
        "category": "jabbarroot",
        "icon": "$(file-add)"
      },
      {
        "command": "jabbarroot.activateBrick",
        "title": "Activate Brick for Project Compilation",
        "category": "jabbarroot",
        "icon": "$(star)"
      },
      {
        "command": "jabbarroot.deactivateBrick",
        "title": "Deactivate Brick from Project Compilation",
        "category": "jabbarroot",
        "icon": "$(star-full)"
      },
      {
        "command": "jabbarroot.editProjectOptions",
        "title": "jabbarroot: Edit Project Options...",
        "category": "jabbarroot",
        "icon": "$(settings-gear)"
      },
      {
        "command": "jabbarroot.editBrickOptions",
        "title": "jabbarroot: Edit Brick Options...",
        "category": "jabbarroot",
        "icon": "$(settings-gear)"
      },
      {
        "command": "jabbarroot.deleteProject",
        "title": "jabbarroot: Delete Project",
        "category": "jabbarroot",
        "icon": "$(trash)"
      },
      {
        "command": "jabbarroot.deleteBrick",
        "title": "jabbarroot: Delete Brick",
        "category": "jabbarroot",
        "icon": "$(trash)"
      },
      {
        "command": "jabbarroot.compileBrick",
        "title": "jabbarroot: Compile Brick Individually",
        "category": "jabbarroot",
        "icon": "$(server-process)"
      },
      {
        "command": "jabbarroot.compileProject",
        "title": "jabbarroot: Compile Project (Active Bricks)",
        "category": "jabbarroot",
        "icon": "$(layers-active)"
      },
      {
        "command": "jabbarroot.addSelectionToActiveBrick",
        "title": "JabbarRoot: Ajouter la sélection à la brique active",
        "category": "JabbarRoot",
        "icon": "$(add)"
      },
      {
        "command": "jabbarroot.setAsDefaultTargetBrick",
        "title": "JabbarRoot: Définir comme brique de collecte",
        "category": "JabbarRoot",
        "icon": "$(target)"
      },
      {
        "command": "jabbarroot.removeSingleFileFromBrick",
        "title": "Retirer ce fichier de la brique",
        "category": "JabbarRoot",
        "icon": "$(trash)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "jabbarroot.createProject",
          "when": "false"
        },
        {
          "command": "jabbarroot.createBrickInProject",
          "when": "false"
        },
        {
          "command": "jabbarroot.compileProject",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "jabbarroot.createProject",
          "when": "view == jabbarroot.contextView",
          "group": "navigation@1"
        },
        {
          "command": "jabbarroot.refreshProjectView",
          "when": "view == jabbarroot.contextView",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "jabbarroot.createBrickInProject",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootProject",
          "group": "inline"
        },
        {
          "command": "jabbarroot.compileProject",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootProject",
          "group": "inline"
        },
        {
          "command": "jabbarroot.editProjectOptions",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootProject",
          "group": "inline"
        },
        {
          "command": "jabbarroot.deleteProject",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootProject",
          "group": "inline"
        },
        {
          "command": "jabbarroot.compileBrick",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootBrick",
          "group": "inline@1"
        },
        {
          "command": "jabbarroot.activateBrick",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootBrick && !jabbarroot:selectedBrickIsActive",
          "group": "inline@2"
        },
        {
          "command": "jabbarroot.deactivateBrick",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootBrick && jabbarroot:selectedBrickIsActive",
          "group": "inline@2"
        },
        {
          "command": "jabbarroot.setAsDefaultTargetBrick",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootBrick",
          "group": "inline@3"
        },
        {
          "command": "jabbarroot.addPathToBrick",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootBrick",
          "group": "inline@4"
        },
        {
          "command": "jabbarroot.removeFileFromBrick",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootBrick",
          "group": "inline@5"
        },
        {
          "command": "jabbarroot.deleteBrick",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootBrick",
          "group": "inline@6"
        },
        {
          "command": "jabbarroot.editBrickOptions",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootBrick",
          "group": "inline@7"
        },
        {
          "command": "jabbarroot.removeSingleFileFromBrick",
          "when": "view == jabbarroot.contextView && viewItem == jabbarrootFileInBrick",
          "group": "inline"
        }
      ],
      "explorer/context": [
        {
          "command": "jabbarroot.addSelectionToActiveBrick",
          "when": "explorerResourceIsFolder || resourceExtname",
          "group": "2_jabbarroot@1"
        }
      ]
    },
    "configuration": {
      "title": "jabbarroot",
      "properties": {
        "jabbarroot.compilation.includeProjectTree": {
          "type": "boolean",
          "default": true,
          "description": "Include the project tree in the compiled context if the option is checked for this context."
        },
        "jabbarroot.view.statistics.enabled": {
          "type": "boolean",
          "default": true,
          "description": "[Master Switch] Show or hide globally the statistics for all contexts."
        },
        "jabbarroot.view.statistics.showSize": {
          "type": "boolean",
          "default": true,
          "description": "Show or hide the 'Size (chars)' line."
        },
        "jabbarroot.view.statistics.showTokens": {
          "type": "boolean",
          "default": true,
          "description": "Show or hide the 'Tokens (est.)' line."
        },
        "jabbarroot.view.statistics.showReduction": {
          "type": "boolean",
          "default": true,
          "description": "Show or hide the 'Reduction' line."
        },
        "jabbarroot.view.statistics.showMotivation": {
          "type": "boolean",
          "default": true,
          "description": "Show or hide the 'Motivation' line."
        },
        "jabbarroot.activeContextId": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "DO NOT EDIT MANUALLY. The ID of the currently active context."
        }
      }
    }
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "scripts": {
    "vscode:prepublish": "node ./esbuild.mjs",
    "build": "node ./esbuild.mjs",
    "package": "node ./esbuild.mjs", 
    "watch": "node ./esbuild.mjs --watch",
    "pretest": "pnpm run build",
    "test": "vscode-test"
  },
  "dependencies": {
    "@jabbarroot/core": "workspace:*",
    "@jabbarroot/prompt-factory": "workspace:*",
    "@jabbarroot/types": "workspace:*",
    "@jridgewell/trace-mapping": "^0.3.26",
    "minimatch": "^10.0.3"
  },
  "devDependencies": {
    "@types/minimatch": "^5.1.2",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.19.2",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.70.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "@yarnpkg/esbuild-plugin-pnp": "3.0.0-rc.15",
    "chai": "^5.2.0",
    "esbuild": "^0.25.5",
    "sinon": "^21.0.0",
    "tsd": "^0.7.4",
    "xo": "^0.24.0"
  }
}