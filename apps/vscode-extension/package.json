{
  "name": "jabbarroot-vscode-extension",
  "displayName": "JabbarRootAi",
  "description": "jabbarroot, the flow protector",
  "version": "0.2.0",
  "publisher": "JabbarRootAi",
  "repository": {
    "type": "git",
    "url": "https://github.com/MrAdnanox/JabbarRootAi.git"
  },
  "bugs": {
    "url": "https://github.com/MrAdnanox/JabbarRootAi/issues"
  },
  "engines": {
    "vscode": "^1.70.0",
    "node": ">=16.0.0"
  },
  "categories": [
    "Other",
    "AI"
  ],
  "keywords": [
    "ai",
    "assistant",
    "productivity",
    "jabbarroot"
  ],
  "icon": "resources/JabbarRoot-icon.png",
  "main": "./dist/extension.cjs",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "jabbarroot",
          "title": "JabbarRootAi",
          "icon": "resources/JabbarRoot-icon.svg"
        }
      ]
    },
    "views": {
      "jabbarroot": [
        {
          "id": "jabbarroot.contextView",
          "name": "Contextes Programmables",
          "icon": "resources/JabbarRoot-icon.svg",
          "contextualTitle": "jabbarroot"
        }
      ]
    },

    "commands": [
      {
        "command": "jabbarroot.orchestration.OrdoAbChaos",
        "title": "JabbarRoot: Ordo Ab Chaos",
        "category": "jabbarroot"
      },
      {
        "command": "jabbarroot.RunAgent",
        "title": "JabbarRoot: Exécuter un Agent Cognitif...",
        "category": "jabbarroot"
      },
      {
        "command": "jabbarroot.agents.GenerateTests",
        "title": "JabbarTest: Générer les tests unitaires",
        "category": "jabbarroot",
        "icon": "$(test)"
      },
      {
        "command": "jabbarroot.agents.StructureAnalyzer",
        "title": "JabbarAnalyzer: Analyser la structure du projet",
        "category": "jabbarroot",
        "icon": "$(graph)"
      },
      {
        "command": "jabbarroot.agents.GenerateReadme",
        "title": "JabbarDoc: Générer le README du projet",
        "category": "jabbarroot",
        "icon": "$(notebook)"
      },
      {
        "command": "jabbarroot.RefreshProjectView",
        "title": "jabbarroot: Refresh Projects View",
        "category": "jabbarroot",
        "icon": "$(refresh)"
      },
      {
        "command": "jabbarroot.CreateProject",
        "title": "jabbarroot: Create New Project",
        "category": "jabbarroot",
        "icon": "$(add)"
      },
      {
        "command": "jabbarroot.CreateBrickInProject",
        "title": "jabbarroot: Create New Brick",
        "category": "jabbarroot",
        "icon": "$(add)"
      },
      {
        "command": "jabbarroot.RemoveFileFromBrick",
        "title": "jabbarroot: Remove Files from Brick...",
        "category": "jabbarroot",
        "icon": "$(diff-removed)"
      },
      {
        "command": "jabbarroot.AddPathToBrick",
        "title": "jabbarroot: Add Path to Brick",
        "category": "jabbarroot",
        "icon": "$(file-add)"
      },
      {
        "command": "jabbarroot.ActivateBrick",
        "title": "Activate Brick for Project Compilation",
        "category": "jabbarroot",
        "icon": "$(star)"
      },
      {
        "command": "jabbarroot.DeactivateBrick",
        "title": "Deactivate Brick from Project Compilation",
        "category": "jabbarroot",
        "icon": "$(star-full)"
      },
      {
        "command": "jabbarroot.EditProjectOptions",
        "title": "jabbarroot: Edit Project Options...",
        "category": "jabbarroot",
        "icon": "$(settings-gear)"
      },
      {
        "command": "jabbarroot.EditBrickOptions",
        "title": "jabbarroot: Edit Brick Options...",
        "category": "jabbarroot",
        "icon": "$(settings-gear)"
      },
      {
        "command": "jabbarroot.DeleteProject",
        "title": "jabbarroot: Delete Project",
        "category": "jabbarroot",
        "icon": "$(trash)"
      },
      {
        "command": "jabbarroot.DeleteBrick",
        "title": "jabbarroot: Delete Brick",
        "category": "jabbarroot",
        "icon": "$(trash)"
      },
      {
        "command": "jabbarroot.CompileBrick",
        "title": "jabbarroot: Compile Brick Individually",
        "category": "jabbarroot",
        "icon": "$(server-process)"
      },
      {
        "command": "jabbarroot.CompileProject",
        "title": "jabbarroot: Compile Project (Active Bricks)",
        "category": "jabbarroot",
        "icon": "$(layers-active)"
      },
      {
        "command": "jabbarroot.AddSelectionToActiveBrick",
        "title": "JabbarRoot: Ajouter la sélection à la brique active",
        "category": "JabbarRoot",
        "icon": "$(add)"
      },
      {
        "command": "jabbarroot.SetAsDefaultTargetBrick",
        "title": "JabbarRoot: Définir comme brique de collecte",
        "category": "JabbarRoot",
        "icon": "$(target)"
      },
      {
        "command": "jabbarroot.RemoveSingleFileFromBrick",
        "title": "Retirer ce fichier de la brique",
        "category": "JabbarRoot",
        "icon": "$(trash)"
      },
      {
        "command": "jabbarroot.showSanctuary",
        "title": "JabbarRoot: Ouvrir le Sanctuaire",
        "category": "jabbarroot",
        "icon": "$(home)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "jabbarroot.CreateProject",
          "when": "false"
        },
        {
          "command": "jabbarroot.CreateBrickInProject",
          "when": "false"
        },
        {
          "command": "jabbarroot.CompileProject",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "jabbarroot.CreateProject",
          "when": "view == jabbarroot.contextView",
          "group": "navigation@1"
        },
        {
          "command": "jabbarroot.RefreshProjectView",
          "when": "view == jabbarroot.contextView",
          "group": "navigation@2"
        },
        {
          "command": "jabbarroot.showSanctuary",
          "when": "view == jabbarroot.contextView",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "jabbarroot.CreateBrickInProject",
          "when": "view == jabbarroot.contextView && (viewItem == 'jabbarrootProject' || viewItem == 'jabbarrootUserBrickGroup')",
          "group": "inline"
        },
        {
          "command": "jabbarroot.CompileProject",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootProject'",
          "group": "inline"
        },
        {
          "command": "jabbarroot.EditProjectOptions",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootProject'",
          "group": "inline"
        },
        {
          "command": "jabbarroot.DeleteProject",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootProject'",
          "group": "inline"
        },
        {
          "command": "jabbarroot.CompileBrick",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootBrick'",
          "group": "inline@1"
        },
        {
          "command": "jabbarroot.ActivateBrick",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootBrick' && !jabbarroot:selectedBrickIsActive",
          "group": "inline@2"
        },
        {
          "command": "jabbarroot.DeactivateBrick",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootBrick' && jabbarroot:selectedBrickIsActive",
          "group": "inline@2"
        },
        {
          "command": "jabbarroot.SetAsDefaultTargetBrick",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootBrick'",
          "group": "inline@3"
        },
        {
          "command": "jabbarroot.AddPathToBrick",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootBrick'",
          "group": "inline@4"
        },
        {
          "command": "jabbarroot.RemoveFileFromBrick",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootBrick'",
          "group": "inline@5"
        },
        {
          "command": "jabbarroot.DeleteBrick",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootBrick'",
          "group": "inline@6"
        },
        {
          "command": "jabbarroot.EditBrickOptions",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootBrick'",
          "group": "inline@7"
        },
        {
          "command": "jabbarroot.RemoveSingleFileFromBrick",
          "when": "view == jabbarroot.contextView && viewItem == 'jabbarrootFileInBrick'",
          "group": "inline"
        }
      ],
      "explorer/context": [
        {
          "command": "jabbarroot.AddSelectionToActiveBrick",
          "when": "explorerResourceIsFolder || resourceExtname",
          "group": "2_jabbarroot@1"
        }
      ]
    },
    "configuration": {
      "title": "JabbarRoot",
      "properties": {
        "jabbarroot.gemini.apiKey": {
          "type": "string",
          "default": "",
          "description": "Your Google Gemini API key for AI features.",
          "scope": "machine-overridable"
        },
        "jabbarroot.compilation.includeProjectTree": {
          "type": "boolean",
          "default": true,
          "description": "Include the project tree in the compiled context if the option is checked for this context."
        },
        "jabbarroot.view.statistics.enabled": {
          "type": "boolean",
          "default": true,
          "description": "[Master Switch] Show or hide globally the statistics for all contexts."
        },
        "jabbarroot.view.statistics.showSize": {
          "type": "boolean",
          "default": true,
          "description": "Show or hide the 'Size (chars)' line."
        },
        "jabbarroot.view.statistics.showTokens": {
          "type": "boolean",
          "default": true,
          "description": "Show or hide the 'Tokens (est.)' line."
        },
        "jabbarroot.view.statistics.showReduction": {
          "type": "boolean",
          "default": true,
          "description": "Show or hide the 'Reduction' line."
        },
        "jabbarroot.view.statistics.showMotivation": {
          "type": "boolean",
          "default": true,
          "description": "Show or hide the 'Motivation' line."
        },
        "jabbarroot.activeContextId": {
          "type": ["string", "null"],
          "default": null,
          "description": "DO NOT EDIT MANUALLY. The ID of the currently active context."
        },
        "jabbarroot.debug.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging for development purposes."
        }
      }
    }
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "scripts": {
    "vscode:prepublish": "pnpm run build",
    "rebuild:native": "electron-rebuild -v 31.2.0 --force",
    "clean": "rimraf dist src/generated",
    "prebuild": "pnpm run clean",
    "generate:entries": "node scripts/generate-entries.mjs",
    "build:deps": "pnpm run --filter='@jabbarroot/*' build",
    "build:esbuild": "pnpm run generate:entries && node ./esbuild.mjs",
    "build": "pnpm run build:deps && pnpm run build:esbuild",
    "package": "node package.mjs",
    "watch": "pnpm run generate:entries && node ./esbuild.mjs --watch",
    "dev": "pnpm run build:deps && pnpm run watch",
    "pretest": "pnpm run build",
    "test": "vscode-test",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "type-check": "tsc --noEmit",
    "validate": "pnpm run type-check && pnpm run lint"
  },
  "dependencies": {
    "@jabbarroot/core": "workspace:*",
    "@jabbarroot/prompt-factory": "workspace:*",
    "@jabbarroot/types": "workspace:*",
    "@jabbarroot/vector-engine": "workspace:*",
    "@jridgewell/trace-mapping": "^0.3.26",
    "@vscode/sqlite3": "5.1.8-vscode",
    "d3": "^7.9.0",
    "lru-cache": "^11.1.0",
    "minimatch": "^10.0.3",
    "tiktoken": "^1.0.21",
    "tree-sitter": "^0.25.0",
    "web-tree-sitter": "^0.24.7"
  },
  "devDependencies": {
    "@types/d3": "^7.4.3",
    "@types/minimatch": "^5.1.2",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.19.2",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.70.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "@yarnpkg/esbuild-plugin-pnp": "3.0.0-rc.15",
    "chai": "^5.2.0",
    "electron-rebuild": "^3.2.9",
    "esbuild": "^0.25.5",
    "esbuild-native-node-modules-plugin": "^1.0.3",
    "eslint": "^9.25.1",
    "rimraf": "^6.0.1",
    "sinon": "^21.0.0",
    "tsd": "^0.7.4",
    "typescript": "^5.8.3",
    "xo": "^0.24.0"
  },
  "optionalDependencies": {
    "vscode": "^1.70.0"
  },
  "bundledDependencies": [
    "@jabbarroot/core",
    "@jabbarroot/prompt-factory",
    "@jabbarroot/types",
    "@jabbarroot/vector-engine"
  ]
}